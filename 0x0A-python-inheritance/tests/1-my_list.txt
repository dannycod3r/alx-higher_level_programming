# 1-my_list.py

====================
Module ``1-my_list``
====================

Supplies the class ``MyList``.
Class has public method print_sorted() that prints the list, but
sorted (ascending sort)

Example

Sorted list
::
    >>> MyList = __import__('1-my_list').MyList
    >>> mlist = MyList()
    >>> mlist.append(1)
    >>> mlist.append(2)
    >>> mlist.append(3)
    >>> mlist.append(4)
    >>> mlist.print_sorted()
    [1, 2, 3, 4]

Same number
::
    >>> MyList = __import__('1-my_list').MyList
    >>> mlist = MyList()
    >>> mlist.append(1)
    >>> mlist.append(1)
    >>> mlist.append(1)
    >>> mlist.append(1)
    >>> mlist.print_sorted()
    [1, 1, 1, 1]


Unsorted list
::
    >>> my_list = MyList()
    >>> my_list.append(4)
    >>> my_list.append(2)
    >>> my_list.append(1)
    >>> my_list.append(3)
    >>> my_list.print_sorted()
    [1, 2, 3, 4]

Empty list
::
    >>> my_list = MyList()
    >>> my_list.print_sorted()
    []

Duplicates
::
    >>> my_list_dup = MyList()
    >>> my_list_dup.append(1)
    >>> my_list_dup.append(5)
    >>> my_list_dup.append(2)
    >>> my_list_dup.append(1)
    >>> my_list_dup.append(3)
    >>> my_list_dup.append(3)
    >>> my_list_dup.append(4)
    >>> my_list_dup.print_sorted()
    [1, 1, 2, 3, 3, 4, 5]

Single Number
::
    >>> my_list_one = MyList()
    >>> my_list_one.append(4)
    >>> my_list_one.print_sorted()
    [4]

None
::
    >>> my_list_none = MyList()
    >>> my_list_none.append(None)
    >>> my_list_none.print_sorted()
    [None]

Floats
::
    >>> my_list_fl = MyList()
    >>> my_list_fl.append(2.5)
    >>> my_list_fl.append(3.4)
    >>> my_list_fl.append(1.19)
    >>> my_list_fl.print_sorted()
    [1.19, 2.5, 3.4]

Strings
::
    >>> my_list_str = MyList()
    >>> my_list_str.append("Kfoi")
    >>> my_list_str.append("Ama")
    >>> my_list_str.append("Yaw")
    >>> my_list_str.print_sorted()
    ['Ama', 'Kfoi', 'Yaw']
